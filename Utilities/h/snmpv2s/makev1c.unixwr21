
#
#
# Copyright (C) 1992-1998 by SNMP Research, Incorporated.
#
# This software is furnished under a license and may be used and copied
# only in accordance with the terms of such license and with the
# inclusion of the above copyright notice. This software or any other
# copies thereof may not be provided or otherwise made available to any
# other person. No title to and ownership of the software is hereby
# transferred.
#
# The information in this software is subject to change without notice
# and should not be construed as a commitment by SNMP Research, Incorporated.
#
# Restricted Rights Legend:
#  Use, duplication, or disclosure by the Government is subject to
#  restrictions as set forth in subparagraph (c)(1)(ii) of the Rights
#  in Technical Data and Computer Software clause at DFARS 252.227-7013;
#  subparagraphs (c)(4) and (d) of the Commercial Computer
#  Software-Restricted Rights Clause, FAR 52.227-19; and in similar
#  clauses in the NASA FAR Supplement and other corresponding
#  governmental regulations.
#
#

#
#                PROPRIETARY NOTICE
#
# This software is an unpublished work subject to a confidentiality agreement
# and is protected by copyright and trade secret law.  Unauthorized copying,
# redistribution or other use of this work is prohibited.
#
# The above notice of copyright on this source code product does not indicate
# any actual or intended publication of such source code.
#
#


TOPDIR = ../../..

#
# Operating System Information
#

RM = rm -f
RMDIR = rmdir
MOVE = mv
CP = cp
CAT = cat
# PRESERVE is the flag to $(CP) to duplicate the modification time and
# permission modes of the original file or directory.
PRESERVE = -p

# Extensions to certain kinds of files are set here.
LIBEXT = a
BINEXT =
OBJEXT = o


TCL_DIR = /usr/local/lib
TK_DIR = /usr/local/lib
ITCL_DIR = /usr/local/lib/itcl

TCL_VERSION = 7.6
TK_VERSION = 4.2
ITCL_VERSION = 2.2
ITK_VERSION = 2.2


              OS = -DUNIXWARE
              os = unixware
          OSTYPE = -DSTRNET
         OSFLAGS =
      SOCKETLIBS = -lsocket -lnsl -lelf
     THREAD_LIBS =
      EXTRA_DEFS =
            LLIB = llib-l
      LINTLIBOPT = -C


              CC = /usr/ccs/bin/cc
              LD = /usr/ccs/bin/cc
      DEBUGFLAGS = -g
            LINT = lint
              AR = ar
             LEX = lex
            YACC = yacc
          AROPTS = cr
          RANLIB = touch
DYN_LIB_LIBS =
IPC_DEFAULT = -DSR_UDS_IPC
IPC_DEFAULT_LIB = uds


              OS = -DUNIXWARE -DSR_UNIXWR21
              os = unixwr21
          OSTYPE = -DSTRNET
         OSFLAGS =
      SOCKETLIBS = -lsocket -lnsl -lelf
     THREAD_LIBS =
      EXTRA_DEFS =
            LLIB = llib-l
      LINTLIBOPT = -C


              CC = /usr/ccs/bin/cc
              LD = /usr/ccs/bin/cc
      DEBUGFLAGS = -g
            LINT = lint
              AR = ar
             LEX = lex
            YACC = yacc
          AROPTS = cr
          RANLIB = touch
DYN_LIB_LIBS =
IPC_DEFAULT = -DSR_UDS_IPC
IPC_DEFAULT_LIB = uds


#
# Directories
#


OBD_V1 = 1

OBD_V2c = c

OBD_V2 =

OBD_V3 =

OSBASEDIR = v$(OBD_V1)$(OBD_V2c)$(OBD_V2)$(OBD_V3)


OSLIBDIR = $(os)$(OSBASEDIR).lib
OSOBJDIR = $(os)$(OSBASEDIR).obj
OSBINDIR = $(os)$(OSBASEDIR).bin

SECUR_DIR = $(TOPDIR)/../md5nodes

LIBDIR      = $(SECUR_DIR)/$(OSLIBDIR)
BINDIR      = $(SECUR_DIR)/$(OSBINDIR)
INSTALLDIR  = $(SECUR_DIR)/$(OSBINDIR)
MIBS_DIR    = $(TOPDIR)/mibs
MIBCOMP_DIR = $(SECUR_DIR)/$(OSBINDIR)

#
# Subordinant Makefile
#


BMFN_V1 = 1

BMFN_V2c = c

BMFN_V2 =

BMFN_V3 =

BASEMAKEFILENAME = Makev$(BMFN_V1)$(BMFN_V2c)$(BMFN_V2)$(BMFN_V3)


SUBMAKEFILE = $(BASEMAKEFILENAME).$(os)
#
# Compile Options
#

LIGHT = -DNOTICE
DEBUG = -DSR_DEBUG
SR_MIB_TABLE_HASHING = -DSR_MIB_TABLE_HASHING
SR_CONFIG_FP = -DSR_CONFIG_FP
PROXY =
SETS = -DSETS
WEB_AGT =
WEB_MGR =

CUSTOMER_DEFINES = -DSR_SIEMENS_NIXDORF

EXPORT = -DSR_NO_PRIVACY

SNMP_V1_PACKET = -DSR_SNMPv1_PACKET -DSR_SNMPv1_WRAPPER

SNMP_V2C_PACKET = -DSR_SNMPv2c_PACKET -DSR_SNMPv1_WRAPPER -DSR_SNMPv2_PDU

SNMP_V1_PACKET_MIB = -DSR_SNMPv1_PACKET_MIB

SNMP_V2_PACKET =
SNMP_V2_PACKET_MIB =

SNMP_V3_PACKET =
SNMP_V3_PACKET_MIB =

SYS_OR_TABLE =

TRANSPORT_TABLE = -DSR_TRANSPORT_TABLE

NOTIFY_COMPLIANCE_LEVEL = \
	-DSR_NOTIFY_FULL_COMPLIANCE

PROXY_COMPLIANCE_LEVEL =

SNMPV3_COMPLIANCE_OPTIONS = \
	$(NOTIFY_COMPLIANCE_LEVEL) \
	$(PROXY_COMPLIANCE_LEVEL)

USER_SEC_MODEL = -DSR_USER_SEC_MODEL

SUPPORTED_SECURITY_MODELS = \
	$(USER_SEC_MODEL)

MD5_HASH_ALGORITHM = -DSR_MD5_HASH_ALGORITHM


SUPPORTED_HASHING_ALGORITHMS = \
	$(MD5_HASH_ALGORITHM)

SNMP_ADMINISTRATIVE_FRAMEWORK_VERSION = -DSR_SNMPv1_ADMIN

SNMP_ADMINISTRATIVE_MIB_SUPPORT = -DSR_SNMP_ADMIN_MIB

SUPPORTED_PACKET_VERSIONS = \
	$(SNMP_V1_PACKET) \
	$(SNMP_V2C_PACKET) \
	$(SNMP_V2_PACKET) \
	$(SNMP_V3_PACKET)

SUPPORTED_PACKET_MIBS = \
	$(SNMP_V1_PACKET_MIB) \
	$(SNMP_V2_PACKET_MIB) \
	$(SNMP_V3_PACKET_MIB)

#GENERATE_CONFIGURATION = -DSR_GENERATE_SNMPV3_CONFIGURATION
GENERATE_CONFIGURATION = -DSR_GENERATE_OLD_STYLE_CONFIGURATION

SNMP_OPTIONS = \
	$(CUSTOMER_DEFINES) \
	$(EXPORT) \
	$(SYS_OR_TABLE) \
	$(TRANSPORT_TABLE) \
	$(SUPPORTED_PACKET_VERSIONS) \
	$(SUPPORTED_PACKET_MIBS) \
	$(SUPPORTED_SECURITY_MODELS) \
	$(SUPPORTED_HASHING_ALGORITHMS) \
	$(SNMPV3_COMPLIANCE_OPTIONS) \
	$(SNMP_ADMINISTRATIVE_FRAMEWORK_VERSION) \
	$(SNMP_ADMINISTRATIVE_MIB_SUPPORT) \
	$(GENERATE_CONFIGURATION)

#
# Transports
#

IP_TRANSPORT = -DSR_IP

IPX_TRANSPORT =

TRANSPORTS = $(IP_TRANSPORT) $(IPX_TRANSPORT)

#
# Compile Commands
#


CORULE = $(CC) -c $(OSFLAGS) $(CFLAGS) $(@F:.o=.c) ; $(MOVE) $(@F) $@
REMOTERULE = $(CC) -c $(OSFLAGS) $(CFLAGS) $(REMOTEDIR)/$(@F:.o=.c) ; $(MOVE) $(@F) $@
MGRCORULE = $(CC) -c $(OSFLAGS) $(MGRCFLAGS) $(@F:.o=.c) ; $(MOVE) $(@F) $@
YACCRULE = $(CC) -c $(OSFLAGS) $(CFLAGS) $(OSOBJDIR)/$(@F:.o=.c) ; $(MOVE) $(@F) $@
MOSYRULE = $(CC) -c $(OSFLAGS) $(MGRCFLAGS) $(SECLIBDIR)/$(@F:.o=.c) ; $(MOVE) $(@F) $@

CORULE = $(CC) -c $(OSFLAGS) $(CFLAGS) $(@F:.o=.c) ; $(MOVE) $(@F) $@
REMOTERULE = $(CC) -c $(OSFLAGS) $(CFLAGS) $(REMOTEDIR)/$(@F:.o=.c) ; $(MOVE) $(@F) $@
MGRCORULE = $(CC) -c $(OSFLAGS) $(MGRCFLAGS) $(@F:.o=.c) ; $(MOVE) $(@F) $@
YACCRULE = $(CC) -c $(OSFLAGS) $(CFLAGS) $(OSOBJDIR)/$(@F:.o=.c) ; $(MOVE) $(@F) $@
MOSYRULE = $(CC) -c $(OSFLAGS) $(MGRCFLAGS) $(SECLIBDIR)/$(@F:.o=.c) ; $(MOVE) $(@F) $@

SHELL=/bin/sh


MIB = v2

MIBOUTDEFS = \
        -DMIBDEFS=\"$(MIB)defs.h\" \
        -DMIBPART=\"$(MIB)part.h\" \
        -DMIBSUPP=\"$(MIB)supp.h\" \
        -DMIBTYPE=\"$(MIB)type.h\" \
        -DMIBPROT=\"$(MIB)prot.h\"

# Force v2 admin model to ensure that everything gets built in properly
SNMP_ADMINISTRATIVE_FRAMEWORK_VERSION = -DSR_SNMPv2_ADMIN
TRANSPORT_TABLE = -DSR_TRANSPORT_TABLE
SNMP_V2_PACKET_MIB = -DSR_SNMPv2_PACKET_MIB

DEFS = \
	$(OS) \
	$(OSTYPE) \
	$(NETTYPE) \
	$(DEBUG) \
	$(LIGHT) \
	$(SETS) \
	$(WEB_AGT) \
	$(WEB_MGR) \
	$(SNMP_OPTIONS) \
	$(TRANSPORTS) \
	$(PROXY) \
	$(MIBOUTDEFS) \
	$(SR_CONFIG_FP) \
	$(TRANSPORT_TABLE) \
	-DSUBSYSTEM \
	$(EXTRA_DEFS) \
	$(SYSOPTS)

LDFLAGS =

#
# Structure Information
#

INCLUDES = \
	-I. \
	-I$(TOPDIR)/include \
	-I$(OSOBJDIR) \
	-I$(TOPDIR)/snmpd/shared \
	-I$(TOPDIR)/snmpd/include \
	-I$(TOPDIR)/snmpd/mibs \
	$(ARC_INC_DIRS)

#
# What to build
#

I_SRCS = \
	i_ac.c \
	i_adms.c \
	i_comm.c \
	i_contex.c \
	i_notify.c \
	i_trans.c \
	i_usec.c \
	i_view.c
I_OBJS = \
	$(OSOBJDIR)/i_ac.o \
	$(OSOBJDIR)/i_adms.o \
	$(OSOBJDIR)/i_comm.o \
	$(OSOBJDIR)/i_contex.o \
	$(OSOBJDIR)/i_notify.o \
	$(OSOBJDIR)/i_trans.o \
	$(OSOBJDIR)/i_usec.o \
	$(OSOBJDIR)/i_view.o

KV_SRCS = \
	k_ac.c \
	v_ac.c \
	k_adms.c \
	v_adms.c \
	k_comm.c \
	v_comm.c \
	k_contex.c \
	v_contex.c \
	k_notify.c \
	v_notify.c \
	k_trans.c \
	v_trans.c \
	k_usec.c \
	v_usec.c \
	k_view.c \
	v_view.c
KV_OBJS = \
	$(OSOBJDIR)/k_ac.o \
	$(OSOBJDIR)/v_ac.o \
	$(OSOBJDIR)/k_adms.o \
	$(OSOBJDIR)/v_adms.o \
	$(OSOBJDIR)/k_comm.o \
	$(OSOBJDIR)/v_comm.o \
	$(OSOBJDIR)/k_contex.o \
	$(OSOBJDIR)/v_contex.o \
	$(OSOBJDIR)/k_notify.o \
	$(OSOBJDIR)/v_notify.o \
	$(OSOBJDIR)/k_trans.o \
	$(OSOBJDIR)/v_trans.o \
	$(OSOBJDIR)/k_usec.o \
	$(OSOBJDIR)/v_usec.o \
	$(OSOBJDIR)/k_view.o \
	$(OSOBJDIR)/v_view.o

SRCS = $(I_SRCS) $(KV_SRCS)
OBJS = $(I_OBJS) $(KV_OBJS)

#
# How to build
#

COPTIONS = $(DEFS) $(INCLUDES) 
CFLAGS = $(DEBUGFLAGS) $(DEFS) $(INCLUDES) 

LINTFLAGS = $(DEFS) $(COPTIONS)

all: $(OSOBJDIR) $(LIBDIR)/libsnmpv2s.$(LIBEXT)

$(OSOBJDIR):
	mkdir $(OSOBJDIR)

$(LIBDIR)/libsnmpv2s.$(LIBEXT): $(OBJS)
	$(AR) $(AROPTS) $(LIBDIR)/libsnmpv2s.$(LIBEXT) $(OBJS)
	$(RANLIB) $(LIBDIR)/libsnmpv2s.$(LIBEXT)

$(OSOBJDIR)/i_ac.o: i_ac.c
	$(CORULE)

$(OSOBJDIR)/i_adms.o: i_adms.c
	$(CORULE)

$(OSOBJDIR)/i_comm.o: i_comm.c
	$(CORULE)

$(OSOBJDIR)/i_contex.o: i_contex.c
	$(CORULE)

$(OSOBJDIR)/i_notify.o: i_notify.c
	$(CORULE)


$(OSOBJDIR)/i_trans.o: i_trans.c
	$(CORULE)

$(OSOBJDIR)/i_usec.o: i_usec.c
	$(CORULE)

$(OSOBJDIR)/i_view.o: i_view.c
	$(CORULE)


$(OSOBJDIR)/k_ac.o: k_ac.c
	$(CORULE)

$(OSOBJDIR)/v_ac.o: v_ac.c
	$(CORULE)

$(OSOBJDIR)/k_adms.o: k_adms.c
	$(CORULE)

$(OSOBJDIR)/v_adms.o: v_adms.c
	$(CORULE)

$(OSOBJDIR)/k_comm.o: k_comm.c
	$(CORULE)

$(OSOBJDIR)/v_comm.o: v_comm.c
	$(CORULE)

$(OSOBJDIR)/k_contex.o: k_contex.c
	$(CORULE)

$(OSOBJDIR)/v_contex.o: v_contex.c
	$(CORULE)

$(OSOBJDIR)/k_notify.o: k_notify.c
	$(CORULE)

$(OSOBJDIR)/v_notify.o: v_notify.c
	$(CORULE)


$(OSOBJDIR)/k_trans.o: k_trans.c
	$(CORULE)

$(OSOBJDIR)/v_trans.o: v_trans.c
	$(CORULE)

$(OSOBJDIR)/k_usec.o: k_usec.c
	$(CORULE)

$(OSOBJDIR)/v_usec.o: v_usec.c
	$(CORULE)

$(OSOBJDIR)/k_view.o: k_view.c
	$(CORULE)

$(OSOBJDIR)/v_view.o: v_view.c
	$(CORULE)


clean:
	-$(RM) $(OSOBJDIR)/* core *~ \#* $(LIBDIR)/libsnmpv2s.$(LIBEXT)

